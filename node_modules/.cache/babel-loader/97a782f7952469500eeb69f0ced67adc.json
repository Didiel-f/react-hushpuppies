{"ast":null,"code":"import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './rootReducer'; // convert object to string and store in localStorage\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serialisedState = JSON.stringify(state);\n    localStorage.setItem(\"persistantState\", serialisedState);\n  } catch (e) {\n    console.warn(e);\n  }\n} // load string from localStarage and convert into an Object\n// invalid output must be undefined\n\n\nfunction loadFromLocalStorage() {\n  try {\n    const serialisedState = localStorage.getItem(\"persistantState\");\n    if (serialisedState === null) return undefined;\n    return JSON.parse(serialisedState);\n  } catch (e) {\n    console.warn(e);\n    return undefined;\n  }\n}\n\nconst store = createStore(rootReducer, loadFromLocalStorage(), composeWithDevTools()); // listen for store changes and use saveToLocalStorage to\n// save them to localStorage\n\nstore.subscribe(() => saveToLocalStorage(store.getState()));\nexport default store;","map":{"version":3,"sources":["C:/Users/didie/Desktop/WEB/ikatech/hush-puppies-app/src/redux/store.js"],"names":["createStore","composeWithDevTools","rootReducer","saveToLocalStorage","state","serialisedState","JSON","stringify","localStorage","setItem","e","console","warn","loadFromLocalStorage","getItem","undefined","parse","store","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAIA;;AACA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAC/B,MAAI;AACF,UAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCJ,eAAxC;AACD,GAHD,CAGE,OAAOK,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,IAAR,CAAaF,CAAb;AACD;AACF,C,CAED;AACA;;;AACA,SAASG,oBAAT,GAAgC;AAC9B,MAAI;AACF,UAAMR,eAAe,GAAGG,YAAY,CAACM,OAAb,CAAqB,iBAArB,CAAxB;AACA,QAAIT,eAAe,KAAK,IAAxB,EAA8B,OAAOU,SAAP;AAC9B,WAAOT,IAAI,CAACU,KAAL,CAAWX,eAAX,CAAP;AACD,GAJD,CAIE,OAAOK,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,IAAR,CAAaF,CAAb;AACA,WAAOK,SAAP;AACD;AACF;;AAEH,MAAME,KAAK,GAAGjB,WAAW,CAACE,WAAD,EAAcW,oBAAoB,EAAlC,EAAuCZ,mBAAmB,EAA1D,CAAzB,C,CAGA;AACA;;AACAgB,KAAK,CAACC,SAAN,CAAgB,MAAMf,kBAAkB,CAACc,KAAK,CAACE,QAAN,EAAD,CAAxC;AAGA,eAAeF,KAAf","sourcesContent":["import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './rootReducer';\r\n\r\n\r\n\r\n// convert object to string and store in localStorage\r\nfunction saveToLocalStorage(state) {\r\n    try {\r\n      const serialisedState = JSON.stringify(state);\r\n      localStorage.setItem(\"persistantState\", serialisedState);\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n  }\r\n  \r\n  // load string from localStarage and convert into an Object\r\n  // invalid output must be undefined\r\n  function loadFromLocalStorage() {\r\n    try {\r\n      const serialisedState = localStorage.getItem(\"persistantState\");\r\n      if (serialisedState === null) return undefined;\r\n      return JSON.parse(serialisedState);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      return undefined;\r\n    }\r\n  }\r\n\r\nconst store = createStore(rootReducer, loadFromLocalStorage() , composeWithDevTools());\r\n\r\n\r\n// listen for store changes and use saveToLocalStorage to\r\n// save them to localStorage\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}