{"ast":null,"code":"import { fromJS, toJS } from 'immutable';\nimport * as actionTypes from './shopping-types';\nexport const addToCart = itemID => {\n  return {\n    type: actionTypes.ADD_TO_CART,\n    payload: {\n      id: itemID\n    }\n  };\n};\nexport const removeFromCart = itemID => {\n  return {\n    type: actionTypes.REMOVE_FROM_CART,\n    payload: {\n      id: itemID\n    }\n  };\n};\nexport const adjustQty = (itemID, value) => {\n  return {\n    type: actionTypes.ADJUST_QTY,\n    payload: {\n      id: itemID,\n      qty: value\n    }\n  };\n};\nexport const loadCurrentItem = item => {\n  return {\n    type: actionTypes.LOAD_CURRENT_ITEM,\n    payload: item\n  };\n};\nexport const loadState = () => {\n  try {\n    const serializedData = localStorage.getItem('state');\n\n    if (serializedData === null) {\n      return undefined; // Si no existe el state en el local storage devolvemos undefined para que cargue el state inicial que hayamos definido\n    }\n\n    return fromJS(JSON.parse(serializedData)); // Si encontramos con exito nuestro storage lo devolvemos.\n  } catch (error) {\n    return undefined; // Si ocurre algun error, devuelvo undefined para cargar el state inicial.\n  }\n};\nexport const saveState = state => {\n  console.log(\"SDASDASD\");\n\n  try {\n    let serializedData = JSON.stringify(state.toJS());\n    localStorage.setItem('state', serializedData);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/didie/Desktop/WEB/ikatech/hush-puppies-app/src/redux/Shopping/shopping-actions.js"],"names":["fromJS","toJS","actionTypes","addToCart","itemID","type","ADD_TO_CART","payload","id","removeFromCart","REMOVE_FROM_CART","adjustQty","value","ADJUST_QTY","qty","loadCurrentItem","item","LOAD_CURRENT_ITEM","loadState","serializedData","localStorage","getItem","undefined","JSON","parse","error","saveState","state","console","log","stringify","setItem"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,IAAhB,QAA2B,WAA3B;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AAEA,OAAO,MAAMC,SAAS,GAAIC,MAAD,IAAY;AAEjC,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACI,WADf;AAEHC,IAAAA,OAAO,EAAE;AACLC,MAAAA,EAAE,EAAEJ;AADC;AAFN,GAAP;AAMH,CARM;AAUP,OAAO,MAAMK,cAAc,GAAIL,MAAD,IAAY;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACQ,gBADf;AAEHH,IAAAA,OAAO,EAAE;AACLC,MAAAA,EAAE,EAAEJ;AADC;AAFN,GAAP;AAMH,CAPM;AASP,OAAO,MAAMO,SAAS,GAAG,CAACP,MAAD,EAASQ,KAAT,KAAmB;AACxC,SAAO;AACHP,IAAAA,IAAI,EAAEH,WAAW,CAACW,UADf;AAEHN,IAAAA,OAAO,EAAE;AACLC,MAAAA,EAAE,EAAEJ,MADC;AAELU,MAAAA,GAAG,EAAEF;AAFA;AAFN,GAAP;AAOH,CARM;AAUP,OAAO,MAAMG,eAAe,GAAIC,IAAD,IAAU;AACrC,SAAO;AACHX,IAAAA,IAAI,EAAEH,WAAW,CAACe,iBADf;AAEHV,IAAAA,OAAO,EAAES;AAFN,GAAP;AAIH,CALM;AASP,OAAO,MAAME,SAAS,GAAG,MAAM;AAC7B,MAAI;AACF,UAAMC,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAvB;;AACA,QAAIF,cAAc,KAAK,IAAvB,EAA4B;AAC1B,aAAOG,SAAP,CAD0B,CACT;AAClB;;AACD,WAAOtB,MAAM,CAACuB,IAAI,CAACC,KAAL,CAAWL,cAAX,CAAD,CAAb,CALE,CAKwC;AAC3C,GAND,CAME,OAAOM,KAAP,EAAc;AACd,WAAOH,SAAP,CADc,CACG;AAClB;AACF,CAVM;AAYP,OAAO,MAAMI,SAAS,GAAIC,KAAD,IAAW;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,MAAI;AACF,QAAIV,cAAc,GAAGI,IAAI,CAACO,SAAL,CAAeH,KAAK,CAAC1B,IAAN,EAAf,CAArB;AACAmB,IAAAA,YAAY,CAACW,OAAb,CAAqB,OAArB,EAA8BZ,cAA9B;AACD,GAHD,CAGE,OAAOM,KAAP,EAAc;AACdG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD;AACF,CARM","sourcesContent":["import {fromJS, toJS} from 'immutable';\r\nimport * as actionTypes from './shopping-types';\r\n\r\nexport const addToCart = (itemID) => {\r\n\r\n    return {\r\n        type: actionTypes.ADD_TO_CART,\r\n        payload: {\r\n            id: itemID\r\n        }\r\n    }\r\n};\r\n\r\nexport const removeFromCart = (itemID) => {\r\n    return {\r\n        type: actionTypes.REMOVE_FROM_CART,\r\n        payload: {\r\n            id: itemID\r\n        }\r\n    }\r\n};\r\n\r\nexport const adjustQty = (itemID, value) => {\r\n    return {\r\n        type: actionTypes.ADJUST_QTY,\r\n        payload: {\r\n            id: itemID,\r\n            qty: value\r\n        }\r\n    }\r\n};\r\n\r\nexport const loadCurrentItem = (item) => {\r\n    return {\r\n        type: actionTypes.LOAD_CURRENT_ITEM,\r\n        payload: item,\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedData = localStorage.getItem('state')\r\n    if (serializedData === null){\r\n      return undefined // Si no existe el state en el local storage devolvemos undefined para que cargue el state inicial que hayamos definido\r\n    }\r\n    return fromJS(JSON.parse(serializedData)) // Si encontramos con exito nuestro storage lo devolvemos.\r\n  } catch (error) {\r\n    return undefined // Si ocurre algun error, devuelvo undefined para cargar el state inicial.\r\n  }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n  console.log(\"SDASDASD\")\r\n  try {\r\n    let serializedData = JSON.stringify(state.toJS())\r\n    localStorage.setItem('state', serializedData)\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}